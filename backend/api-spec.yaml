openapi: 3.0.0
info:
  title: Spendlytic API
  description: API for managing receipts and expenses
  version: 1.0.0
servers:
  - url: https://api.spendlytic.com
    description: Production server
  - url: https://dev-api.spendlytic.com
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          example: john_doe
        email:
          type: string
          format: email
          example: john@example.com
        password:
          type: string
          format: password
          example: password123
    Login:
      type: object
      properties:
        username:
          type: string
          example: john_doe
        password:
          type: string
          format: password
          example: password123
    Bill:
      type: object
      properties:
        id:
          type: integer
          example: 1
        amount:
          type: number
          format: float
          example: 29.99
        date:
          type: string
          format: date-time
          example: "2024-03-20T15:30:00Z"
        category:
          type: string
          example: "Groceries"
        merchant:
          type: string
          example: "Walmart"
        items:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "Milk"
              price:
                type: number
                format: float
                example: 3.99
    Error:
      type: object
      properties:
        error:
          type: string
          example: "Error message"

paths:
  /api/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/upload:
    post:
      summary: Upload a receipt
      tags:
        - Bills
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Receipt uploaded and processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '400':
          description: Invalid file or format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/bills:
    get:
      summary: Get all bills
      tags:
        - Bills
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of bills
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/bills/{billId}:
    get:
      summary: Get a specific bill
      tags:
        - Bills
      security:
        - bearerAuth: []
      parameters:
        - name: billId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Bill details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Bill not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a bill
      tags:
        - Bills
      security:
        - bearerAuth: []
      parameters:
        - name: billId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Bill deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bill deleted successfully"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Bill not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 